name: Deploy main env
on:
  push:
    branches: [ main ]
env:
  DEPLOY_ENV: production
  DNAME: production
  CI: ${{ secrets.CI }}
  API_KEY: ${{ secrets.API_KEY }}
  APP_ID: ${{ secrets.APP_ID }}
  AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
  IS_DEPLOY: ${{ secrets.IS_DEPLOY }}
  MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
  DATABASE: ${{ secrets.DATABASE }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
  JWT_COOKIE_EXPIRES_IN: ${{ secrets.JWT_COOKIE_EXPIRES_IN }}
  MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
  MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
  OAUTH_CLIENTID: ${{ secrets.OAUTH_CLIENTID }}
  OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
  OAUTH_ACCESS_TOKEN: ${{ secrets.OAUTH_ACCESS_TOKEN }}
  OAUTH_REFRESH_TOKEN: ${{ secrets.OAUTH_REFRESH_TOKEN }}
  EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
  LANDING_URL: ${{ secrets.LANDING_URL }}
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Disable update
        run: npm config set update-notifier false
      - name: Download deps
        run: npm ci && npm install firebase-tools
      - name: Deploy to Firebase
        run: npm run deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}